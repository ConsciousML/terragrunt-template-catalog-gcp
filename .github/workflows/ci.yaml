name: CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Prevent CI to run concurrently
# As this workflow runs Terragrunt, it would create lock states
concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  # Disable canceling workflows as this would also create locks
  cancel-in-progress: false

permissions:
  contents: 'read'
  id-token: 'write'
  pull-requests: write

jobs:
  code-quality-checks:
    # Runs the pre-commit checks  (see `.pre-commit-config.yaml`)
    # and runs `terragrunt plan` to ensure the IaC configuration is valid
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # A composite action that sets up GH actions to run TG:
      # - Loads deploy keys to enable TG to pull private repositories
      # - Auth GH actions with GCP using Workflow Identity Federation
      # - Install the gcloud CLI
      # - Runs Mise to install all the tools we need (Terragrunt, OpenTofu, Go, ...)
      - uses: ./.github/actions/setup
        with:
          deploy-keys: ${{ secrets.DEPLOY_KEY_TG_CATALOG }}
          project-id: ${{ secrets.PROJECT_ID }}
          wif-provider: ${{ secrets.WIF_PROVIDER }}
          wif-service-account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Install pre-commit
        run: pip install pre-commit

      # Runs the checks as in pre-commits (tflint, ...)
      # This prevents any discrepancies between the pre-commit checks and the CI checks 
      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1

      - name: Run Terragrunt stack generate and plan
        run: |
          cd examples/stacks/vpc_gce
          terragrunt stack generate
          terragrunt stack run plan --backend-bootstrap --non-interactive

  terratest:
    # Runs Terratest to deploy the infrastructure in a separated environment
    # Performs some tests and then destroy the infra.
    needs: code-quality-checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Fails if the `run-terratest` label is not present on the PR
      - name: Check if PR has 'run-terratest' label
        id: check-label
        run: |
          labels=$(gh pr view "$PR_NUMBER" --json labels -q '.labels[].name')
          echo "Labels on PR: $labels"
          if echo "$labels" | grep -qw "run-terratest"; then
            echo "label_present=true" >> $GITHUB_OUTPUT
          else
            echo "label_present=false" >> $GITHUB_OUTPUT
          fi
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GH_TOKEN: ${{ github.token }} 
      
      - name: Comment PR if missing label
        if: steps.check-label.outputs.label_present == 'false'
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: |
            :x: Please add the `run-terratest` label to this PR in order to run infrastructure tests.

      - name: Fail if label missing
        if: steps.check-label.outputs.label_present == 'false'
        run: exit 1

      # A composite action that sets up GH actions to run TG:
      # - Loads deploy keys to enable TG to pull private repositories
      # - Auth GH actions with GCP using Workflow Identity Federation
      # - Install the gcloud CLI
      # - Runs Mise to install all the tools we need (Terragrunt, OpenTofu, Go, ...)
      - uses: ./.github/actions/setup
        with:
          deploy-keys: ${{ secrets.DEPLOY_KEY_TG_CATALOG }}
          project-id: ${{ secrets.PROJECT_ID }}
          wif-provider: ${{ secrets.WIF_PROVIDER }}
          wif-service-account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Run Terratest
        run: go test -v ./tests/... -timeout 30m
